{"version":3,"sources":["App.js","reportWebVitals.js","index.js"],"names":["PaginationComponent","React","lazy","App","useState","posts","setPosts","loading","setLoading","currentPage","setCurrentPage","fetchQueryResult","queryName","document","getElementById","value","fetch","then","response","json","actualResponse","results","catch","error","console","log","lastPostIndex","firstPostIndex","currentPosts","slice","useEffect","window","localStorage","setItem","JSON","parse","getItem","length","stringify","className","role","id","type","onKeyUp","event","code","placeholder","onClick","map","item","index","src","preview_photos","urls","regular","alt","title","toLowerCase","toString","Array","from","_","itemQuery","fallback","postsPerPage","totalPosts","paginate","pageNumber","reportWebVitals","onPerfEntry","Function","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode"],"mappings":"0MAGMA,EAAsBC,IAAMC,MAAK,kBAAM,gCAE9B,SAASC,IACtB,MAAyBC,mBAAS,IAAlC,mBAAMC,EAAN,KAAaC,EAAb,KACA,EAA6BF,oBAAS,GAAtC,mBAAMG,EAAN,KAAeC,EAAf,KACA,EAAqCJ,mBAAS,GAA9C,mBAAMK,EAAN,KAAmBC,EAAnB,KAGA,SAASC,IACP,IAAIC,EAAYC,SAASC,eAAe,cAAcC,MACtDL,EAAe,GACfF,GAAW,GACXQ,MAAM,2GAA6GJ,EAAY,gBAC9HK,MAAK,SAACC,GACL,OAAOA,EAASC,UAEjBF,MAAK,SAACG,GACLd,EAASc,EAAeC,SACxBb,GAAW,MAEZc,OAAM,SAACC,GACNC,QAAQC,IAAIF,MAIhB,IAAIG,EAnBiB,EAmBDjB,EAChBkB,EAAiBD,EApBA,EAqBjBE,EAAevB,EAAMwB,MAAMF,EAAgBD,GAE/CI,qBAAU,WACW,IAAhBrB,GAAmBsB,OAAOC,aAAaC,QAAQ,aAAcxB,KAC/D,CAACA,IAEJqB,qBAAU,WAAO,IAAD,IACdxB,EAAQ,UAAC4B,KAAKC,MAAMJ,OAAOC,aAAaI,QAAQ,wBAAxC,QAA4D,IACpE1B,EAAc,UAACqB,OAAOC,aAAaI,QAAQ,qBAA7B,QAA8C,KAC3D,IAEHN,qBAAU,WACY,IAAjBzB,EAAMgC,QAAcN,OAAOC,aAAaC,QAAQ,eAAgBC,KAAKI,UAAUjC,MACjF,CAACA,IAIJ,OAAGE,EAGC,qBAAKgC,UAAU,sBAAsBC,KAAK,SAA1C,SACE,sBAAMD,UAAU,UAAhB,0BAKJ,qCACE,sBAAKA,UAAU,mDAAf,UACE,uBAAOE,GAAG,aAAaC,KAAK,OAAOC,QAAS,SAACC,GACzB,UAAfA,EAAMC,MAAkBlC,KAAqBmC,YAAY,sBAC9D,wBAAQL,GAAG,gBAAgBM,QAASpC,EAApC,SAAsD,mBAAG4B,UAAU,sBAErE,qBAAKA,UAAU,kBAAf,SACE,sBAAKA,UAAU,kBAAf,UACE,+CACA,qFAC0B,IAAxBX,EAAaS,OAAgBT,EAAaoB,KAAI,SAACC,EAAMC,GAAP,OAC9C,qBAAwCX,UAAU,oBAAlD,SACI,qBAAKY,IAAKF,EAAKG,eAAe,GAAGC,KAAKC,QAA4CC,IAAKN,EAAKO,MAAMC,cAAelB,UAAU,2BAAvE,OAASW,EAAM,GAAGQ,aADhE,OAASR,EAAM,GAAGQ,eAI9BC,MAAMC,KAAK,CAACvB,OA9DC,IA8DsB,SAACwB,EAAGX,GAAJ,OAAcA,EAAQ,KAAGF,KAAI,SAACc,GAAD,OAChE,qBAAKvB,UAAU,oBAAf,SACE,qBAAKY,IAAK,yCAA2CW,EAAWvB,UAAU,sCAIhF,cAAC,WAAD,CAAUwB,SAAU,wDAApB,SACE,cAAC/D,EAAD,CAAqBgE,aArEN,EAqEkCC,WAAY5D,EAAMgC,OAAQ6B,SAjChE,SAAAC,GAAU,OAAIzD,EAAeyD,WC7ChD,IAYeC,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBrD,MAAK,YAAkD,IAA/CsD,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOF,GACPG,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAQN,OCDdO,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFjE,SAASC,eAAe,SAM1BsD,K","file":"static/js/main.3e69c5bc.chunk.js","sourcesContent":["import React, { useState, useEffect, Suspense } from 'react';\r\nimport './App.css';\r\nimport '../node_modules/bootstrap/dist/css/bootstrap.css';\r\nconst PaginationComponent = React.lazy(() => import('./Pagination.js'));\r\n\r\nexport default function App() {\r\n  const[posts, setPosts] = useState([]);\r\n  const[loading, setLoading] = useState(false);\r\n  const[currentPage, setCurrentPage] = useState(0);\r\n  const postsPerPage = 6;\r\n\r\n  function fetchQueryResult() {\r\n    let queryName = document.getElementById('search-bar').value;\r\n    setCurrentPage(1);\r\n    setLoading(true);\r\n    fetch('https://api.unsplash.com/search/collections?client_id=8ob47p2bor1FSQwzaZfyrmG_fvhp7EJqQWllFJUBUEo&query=' + queryName + '&per_page=30')\r\n    .then((response) => {\r\n      return response.json();\r\n    })\r\n    .then((actualResponse) => {\r\n      setPosts(actualResponse.results);\r\n      setLoading(false);\r\n    })\r\n    .catch((error) => {\r\n      console.log(error);\r\n    });\r\n  }\r\n\r\n  let lastPostIndex = currentPage * postsPerPage;\r\n  let firstPostIndex = lastPostIndex - postsPerPage;\r\n  let currentPosts = posts.slice(firstPostIndex, lastPostIndex);\r\n\r\n  useEffect(() => {\r\n    if(currentPage !== 0) window.localStorage.setItem('curentPage', currentPage);\r\n  }, [currentPage]);\r\n\r\n  useEffect(() => {\r\n    setPosts(JSON.parse(window.localStorage.getItem('apiFetchData')) ?? []);\r\n    setCurrentPage(window.localStorage.getItem('curentPage') ?? 0);\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if(posts.length !== 0) window.localStorage.setItem('apiFetchData', JSON.stringify(posts));\r\n  }, [posts]);\r\n\r\n  const paginate = pageNumber => setCurrentPage(pageNumber);\r\n\r\n  if(loading)\r\n  {\r\n    return (\r\n      <div className=\"spinner-grow loader\" role=\"status\">\r\n        <span className=\"sr-only\">Loading...</span>\r\n      </div>);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <div className=\"d-flex justify-content-center align-items-center\">\r\n        <input id=\"search-bar\" type=\"text\" onKeyUp={(event) => {\r\n          if(event.code === \"Enter\") fetchQueryResult()}} placeholder=\"Search for photos\" />\r\n        <button id=\"search-button\" onClick={fetchQueryResult}><i className=\"fa fa-search\"></i></button>\r\n      </div>\r\n      <div className=\"container-fluid\">\r\n        <div className=\"row text-center\">\r\n          <h1>Image Gallery</h1>\r\n          <p>Your passion is capturing great moments. So is ours.</p>\r\n          {(currentPosts.length !== 0) ? currentPosts.map((item, index) => (\r\n            <div key={\"div\" + (index+1).toString()} className=\"col img-container\">\r\n                <img src={item.preview_photos[0].urls.regular} key={\"img\" + (index+1).toString()} alt={item.title.toLowerCase()} className=\"rounded mx-auto d-block\" />\r\n            </div>\r\n          )) : \r\n          Array.from({length: postsPerPage}, (_, index) => index + 1).map((itemQuery) => (\r\n          <div className=\"col img-container\">\r\n            <img src={\"https://source.unsplash.com/1600x900/?\" + itemQuery} className=\"rounded mx-auto d-block\" />\r\n          </div>))}\r\n        </div>\r\n      </div>\r\n      <Suspense fallback={<div>...Loading Pagination</div>}>\r\n        <PaginationComponent postsPerPage={postsPerPage} totalPosts={posts.length} paginate={paginate} />\r\n      </Suspense>\r\n    </>\r\n  );\r\n}","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport './index.css';\r\nimport App from './App';\r\nimport reportWebVitals from './reportWebVitals';\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById('root')\r\n);\r\n\r\n// If you want to start measuring performance in your app, pass a function\r\n// to log results (for example: reportWebVitals(console.log))\r\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\r\nreportWebVitals();\r\n"],"sourceRoot":""}